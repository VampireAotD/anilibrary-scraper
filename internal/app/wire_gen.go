// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"anilibrary-scraper/internal/config"
	redis2 "anilibrary-scraper/internal/domain/repository/redis"
	scraper2 "anilibrary-scraper/internal/domain/service/scraper"
	"anilibrary-scraper/internal/handler/http/v1/anime"
	"anilibrary-scraper/internal/providers"
	"anilibrary-scraper/internal/scraper"
	"github.com/go-redis/redis/v9"
)

// Injectors from wire.go:

func WireAnimeController(client *redis.Client) anime.Controller {
	animeRepository := redis2.NewAnimeRepository(client)
	scraperScraper := scraper.New()
	service := scraper2.NewScraperService(animeRepository, scraperScraper)
	controller := anime.NewController(service)
	return controller
}

func WireApp() (*App, func(), error) {
	contract, cleanup, err := providers.NewLoggerProvider()
	if err != nil {
		return nil, nil, err
	}
	configConfig, err := config.New()
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	configRedis := configConfig.Redis
	client, cleanup2, err := providers.NewRedisProvider(configRedis, contract)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	app := New(contract, configConfig, client)
	return app, func() {
		cleanup2()
		cleanup()
	}, nil
}
