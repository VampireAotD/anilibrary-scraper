version: '3.9'

services:
  redis:
    image: redis:latest
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - ${REDIS_PORT:-6380}:6379
    environment:
      REDIS_REPLICATION_MODE: master
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a $$REDIS_PASSWORD ping | grep PONG"]
      interval: 2s
      timeout: 2s
      retries: 5
    volumes:
      - redis-data:/data
    networks:
      - local

  app:
    depends_on:
      redis:
        condition: service_healthy
    container_name: anilibrary-request-parser
    build: .
    command:
      - "-pprof"
      - "-prom"
    env_file:
      - .env
    volumes:
      - ./storage:/storage
    ports:
      - "8080:8080"
    networks:
      - local

  prometheus:
    image: prom/prometheus:v2.38.0
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    volumes:
      - ./build/prometheus:/etc/prometheus
    ports:
      - "9090:9090"
    networks:
      - local

  grafana:
    image: grafana/grafana:9.1.4
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - GF_SECURITY_ALLOW_SING_UP=false
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./build/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./build/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    networks:
      - local

networks:
  local:
    driver: bridge

volumes:
  redis-data:
  grafana-data: